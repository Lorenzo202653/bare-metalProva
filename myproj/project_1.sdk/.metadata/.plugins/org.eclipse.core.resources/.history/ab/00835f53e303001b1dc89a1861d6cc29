/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xov7670_prova.h"
#define FRAME_BUFFER_BASE_ADDR 0x10000000
typedef unsigned char	BYTE;

int main()
{
		XOv7670_prova ov7670;
		XOv7670_prova_Config *ov7670_config;
		static BYTE Buffer[20];

		init_platform();

		int status;
		ov7670_config = XOv7670_prova_LookupConfig(XPAR_OV7670_PROVA_0_DEVICE_ID);

		if (ov7670_config == NULL)
			{
				perror("Device config not found in init_ov7670");
				return XST_FAILURE;
			}

	     if ( XOv7670_prova_CfgInitialize(&ov7670, ov7670_config)!= XST_SUCCESS)
	     	{
	     		perror("Error ov7670");
	     		return XST_FAILURE;
	     	}




		XOv7670_prova_Set_outStream_grayscale_V(&ov7670, FRAME_BUFFER_BASE_ADDR);
		XOv7670_prova_EnableAutoRestart(&ov7670);
		XOv7670_prova_Start(&ov7670);
		xil_printf("sono il ciclo1!\n\r");
		while( !XOv7670_prova_IsDone(&ov7670));
		xil_printf("sono il ciclo2!\n\r");
			for (int i = 0; i < 20 ; i++)
			{
				//xil_printf("ID:%d\t%i\n\r ", i,Xil_In8((BaseAddress) + (i)));
				Buffer[i]=Xil_In8((FRAME_BUFFER_BASE_ADDR) + (i));
				xil_printf("Dato: %d \n\r",Buffer[i] );
			}
			xil_printf("File read from ddr successfully!\n\r");
			cleanup_platform();
		return XST_SUCCESS;

    return 0;
}
