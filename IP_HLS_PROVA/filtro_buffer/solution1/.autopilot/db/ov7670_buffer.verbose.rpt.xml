<profile>

<section name = "Vivado HLS Report for 'ov7670_buffer'" level="0">
<item name = "Date">Wed Sep 23 10:37:07 2020
</item>
<item name = "Version">2018.1 (Build 2188600 on Wed Apr 04 19:04:02 MDT 2018)</item>
<item name = "Project">filtro_buffer</item>
<item name = "Solution">solution1</item>
<item name = "Product family">zynquplus</item>
<item name = "Target device">xczu3eg-sbva484-1-e</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00, 0.33, 1.25</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">2, 2, 2, 2, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 52, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">0, -, 68, 104, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 120, -</column>
<column name="Register">-, -, 65, -, -</column>
<specialColumn name="Available">432, 360, 141120, 70560, 0</specialColumn>
<specialColumn name="Utilization (%)">0, 0, ~0, ~0, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="6">Instance, Module, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="ov7670_buffer_AXILiteS_s_axi_U">ov7670_buffer_AXILiteS_s_axi, 0, 0, 68, 104</column>
</table>
</item>
<item name = "DSP48"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="9">Memory, Module, BRAM_18K, FF, LUT, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="7">Name, BRAM_18K, FF, LUT, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="ap_predicate_op25_write_state2">and, 0, 0, 2, 1, 1</column>
<column name="ap_predicate_op27_write_state2">and, 0, 0, 2, 1, 1</column>
<column name="ap_predicate_op28_write_state3">and, 0, 0, 2, 1, 1</column>
<column name="ap_predicate_op31_write_state3">and, 0, 0, 2, 1, 1</column>
<column name="inStream_V_V_0_load_A">and, 0, 0, 2, 1, 1</column>
<column name="inStream_V_V_0_load_B">and, 0, 0, 2, 1, 1</column>
<column name="outStream_CHROMA_V_V_1_load_A">and, 0, 0, 2, 1, 1</column>
<column name="outStream_CHROMA_V_V_1_load_B">and, 0, 0, 2, 1, 1</column>
<column name="outStream_LUMA_V_V_1_load_A">and, 0, 0, 2, 1, 1</column>
<column name="outStream_LUMA_V_V_1_load_B">and, 0, 0, 2, 1, 1</column>
<column name="inStream_V_V_0_state_cmp_full">icmp, 0, 0, 8, 2, 1</column>
<column name="outStream_CHROMA_V_V_1_state_cmp_full">icmp, 0, 0, 8, 2, 1</column>
<column name="outStream_LUMA_V_V_1_state_cmp_full">icmp, 0, 0, 8, 2, 1</column>
<column name="ap_block_state2_io">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state3">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state3_io">or, 0, 0, 2, 1, 1</column>
<column name="tmp_5_fu_90_p2">xor, 0, 0, 2, 1, 2</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">21, 4, 1, 4</column>
<column name="inStream_V_V_0_data_out">9, 2, 8, 16</column>
<column name="inStream_V_V_0_state">15, 3, 2, 6</column>
<column name="inStream_V_V_TDATA_blk_n">9, 2, 1, 2</column>
<column name="outStream_CHROMA_V_V_1_data_out">9, 2, 8, 16</column>
<column name="outStream_CHROMA_V_V_1_state">15, 3, 2, 6</column>
<column name="outStream_CHROMA_V_V_TDATA_blk_n">9, 2, 1, 2</column>
<column name="outStream_LUMA_V_V_1_data_out">9, 2, 8, 16</column>
<column name="outStream_LUMA_V_V_1_state">15, 3, 2, 6</column>
<column name="outStream_LUMA_V_V_TDATA_blk_n">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_CS_fsm">3, 0, 3, 0</column>
<column name="grayscale_valid">1, 0, 1, 0</column>
<column name="grayscale_valid_load_reg_111">1, 0, 1, 0</column>
<column name="inStream_V_V_0_payload_A">8, 0, 8, 0</column>
<column name="inStream_V_V_0_payload_B">8, 0, 8, 0</column>
<column name="inStream_V_V_0_sel_rd">1, 0, 1, 0</column>
<column name="inStream_V_V_0_sel_wr">1, 0, 1, 0</column>
<column name="inStream_V_V_0_state">2, 0, 2, 0</column>
<column name="outStream_CHROMA_V_V_1_payload_A">8, 0, 8, 0</column>
<column name="outStream_CHROMA_V_V_1_payload_B">8, 0, 8, 0</column>
<column name="outStream_CHROMA_V_V_1_sel_rd">1, 0, 1, 0</column>
<column name="outStream_CHROMA_V_V_1_sel_wr">1, 0, 1, 0</column>
<column name="outStream_CHROMA_V_V_1_state">2, 0, 2, 0</column>
<column name="outStream_LUMA_V_V_1_payload_A">8, 0, 8, 0</column>
<column name="outStream_LUMA_V_V_1_payload_B">8, 0, 8, 0</column>
<column name="outStream_LUMA_V_V_1_sel_rd">1, 0, 1, 0</column>
<column name="outStream_LUMA_V_V_1_sel_wr">1, 0, 1, 0</column>
<column name="outStream_LUMA_V_V_1_state">2, 0, 2, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="s_axi_AXILiteS_AWVALID">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_AWREADY">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_AWADDR">in, 5, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WVALID">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WREADY">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WDATA">in, 32, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WSTRB">in, 4, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_ARVALID">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_ARREADY">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_ARADDR">in, 5, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RVALID">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RREADY">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RDATA">out, 32, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RRESP">out, 2, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_BVALID">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_BREADY">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_BRESP">out, 2, s_axi, AXILiteS, scalar</column>
<column name="ap_clk">in, 1, ap_ctrl_hs, ov7670_buffer, return value</column>
<column name="ap_rst_n">in, 1, ap_ctrl_hs, ov7670_buffer, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, ov7670_buffer, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, ov7670_buffer, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, ov7670_buffer, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, ov7670_buffer, return value</column>
<column name="m_axi_gmem_AWVALID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWREADY">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWADDR">out, 32, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWLEN">out, 8, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWSIZE">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWBURST">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWLOCK">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWCACHE">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWPROT">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWQOS">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWREGION">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWUSER">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WVALID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WREADY">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WDATA">out, 32, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WSTRB">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WLAST">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WUSER">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARVALID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARREADY">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARADDR">out, 32, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARLEN">out, 8, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARSIZE">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARBURST">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARLOCK">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARCACHE">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARPROT">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARQOS">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARREGION">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARUSER">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RVALID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RREADY">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RDATA">in, 32, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RLAST">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RUSER">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RRESP">in, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BVALID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BREADY">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BRESP">in, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BUSER">in, 1, m_axi, gmem, pointer</column>
<column name="inStream_V_V_TDATA">in, 8, axis, inStream_V_V, pointer</column>
<column name="inStream_V_V_TVALID">in, 1, axis, inStream_V_V, pointer</column>
<column name="inStream_V_V_TREADY">out, 1, axis, inStream_V_V, pointer</column>
<column name="enable_raw_stream">in, 1, ap_none, enable_raw_stream, scalar</column>
<column name="outStream_LUMA_V_V_TDATA">out, 8, axis, outStream_LUMA_V_V, pointer</column>
<column name="outStream_LUMA_V_V_TVALID">out, 1, axis, outStream_LUMA_V_V, pointer</column>
<column name="outStream_LUMA_V_V_TREADY">in, 1, axis, outStream_LUMA_V_V, pointer</column>
<column name="outStream_CHROMA_V_V_TDATA">out, 8, axis, outStream_CHROMA_V_V, pointer</column>
<column name="outStream_CHROMA_V_V_TVALID">out, 1, axis, outStream_CHROMA_V_V, pointer</column>
<column name="outStream_CHROMA_V_V_TREADY">in, 1, axis, outStream_CHROMA_V_V, pointer</column>
</table>
</item>
</section>
</profile>
