// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ov7670_prova_HH_
#define _ov7670_prova_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ov7670_prova_AXILiteS_s_axi.h"
#include "ov7670_prova_outStream_grayscale_V_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_OUTSTREAM_GRAYSCALE_V_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_OUTSTREAM_GRAYSCALE_V_ID_WIDTH = 1,
         unsigned int C_M_AXI_OUTSTREAM_GRAYSCALE_V_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTSTREAM_GRAYSCALE_V_DATA_WIDTH = 32,
         unsigned int C_M_AXI_OUTSTREAM_GRAYSCALE_V_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTSTREAM_GRAYSCALE_V_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTSTREAM_GRAYSCALE_V_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTSTREAM_GRAYSCALE_V_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct ov7670_prova : public sc_module {
    // Port declarations 78
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > inStream_V_V_TDATA;
    sc_in< sc_logic > inStream_V_V_TVALID;
    sc_out< sc_logic > inStream_V_V_TREADY;
    sc_out< sc_logic > m_axi_outStream_grayscale_V_AWVALID;
    sc_in< sc_logic > m_axi_outStream_grayscale_V_AWREADY;
    sc_out< sc_uint<C_M_AXI_OUTSTREAM_GRAYSCALE_V_ADDR_WIDTH> > m_axi_outStream_grayscale_V_AWADDR;
    sc_out< sc_uint<C_M_AXI_OUTSTREAM_GRAYSCALE_V_ID_WIDTH> > m_axi_outStream_grayscale_V_AWID;
    sc_out< sc_lv<8> > m_axi_outStream_grayscale_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_outStream_grayscale_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_outStream_grayscale_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_outStream_grayscale_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_outStream_grayscale_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_outStream_grayscale_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_outStream_grayscale_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_outStream_grayscale_V_AWREGION;
    sc_out< sc_uint<C_M_AXI_OUTSTREAM_GRAYSCALE_V_AWUSER_WIDTH> > m_axi_outStream_grayscale_V_AWUSER;
    sc_out< sc_logic > m_axi_outStream_grayscale_V_WVALID;
    sc_in< sc_logic > m_axi_outStream_grayscale_V_WREADY;
    sc_out< sc_uint<C_M_AXI_OUTSTREAM_GRAYSCALE_V_DATA_WIDTH> > m_axi_outStream_grayscale_V_WDATA;
    sc_out< sc_uint<C_M_AXI_OUTSTREAM_GRAYSCALE_V_DATA_WIDTH/8> > m_axi_outStream_grayscale_V_WSTRB;
    sc_out< sc_logic > m_axi_outStream_grayscale_V_WLAST;
    sc_out< sc_uint<C_M_AXI_OUTSTREAM_GRAYSCALE_V_ID_WIDTH> > m_axi_outStream_grayscale_V_WID;
    sc_out< sc_uint<C_M_AXI_OUTSTREAM_GRAYSCALE_V_WUSER_WIDTH> > m_axi_outStream_grayscale_V_WUSER;
    sc_out< sc_logic > m_axi_outStream_grayscale_V_ARVALID;
    sc_in< sc_logic > m_axi_outStream_grayscale_V_ARREADY;
    sc_out< sc_uint<C_M_AXI_OUTSTREAM_GRAYSCALE_V_ADDR_WIDTH> > m_axi_outStream_grayscale_V_ARADDR;
    sc_out< sc_uint<C_M_AXI_OUTSTREAM_GRAYSCALE_V_ID_WIDTH> > m_axi_outStream_grayscale_V_ARID;
    sc_out< sc_lv<8> > m_axi_outStream_grayscale_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_outStream_grayscale_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_outStream_grayscale_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_outStream_grayscale_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_outStream_grayscale_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_outStream_grayscale_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_outStream_grayscale_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_outStream_grayscale_V_ARREGION;
    sc_out< sc_uint<C_M_AXI_OUTSTREAM_GRAYSCALE_V_ARUSER_WIDTH> > m_axi_outStream_grayscale_V_ARUSER;
    sc_in< sc_logic > m_axi_outStream_grayscale_V_RVALID;
    sc_out< sc_logic > m_axi_outStream_grayscale_V_RREADY;
    sc_in< sc_uint<C_M_AXI_OUTSTREAM_GRAYSCALE_V_DATA_WIDTH> > m_axi_outStream_grayscale_V_RDATA;
    sc_in< sc_logic > m_axi_outStream_grayscale_V_RLAST;
    sc_in< sc_uint<C_M_AXI_OUTSTREAM_GRAYSCALE_V_ID_WIDTH> > m_axi_outStream_grayscale_V_RID;
    sc_in< sc_uint<C_M_AXI_OUTSTREAM_GRAYSCALE_V_RUSER_WIDTH> > m_axi_outStream_grayscale_V_RUSER;
    sc_in< sc_lv<2> > m_axi_outStream_grayscale_V_RRESP;
    sc_in< sc_logic > m_axi_outStream_grayscale_V_BVALID;
    sc_out< sc_logic > m_axi_outStream_grayscale_V_BREADY;
    sc_in< sc_lv<2> > m_axi_outStream_grayscale_V_BRESP;
    sc_in< sc_uint<C_M_AXI_OUTSTREAM_GRAYSCALE_V_ID_WIDTH> > m_axi_outStream_grayscale_V_BID;
    sc_in< sc_uint<C_M_AXI_OUTSTREAM_GRAYSCALE_V_BUSER_WIDTH> > m_axi_outStream_grayscale_V_BUSER;
    sc_in< sc_logic > enable_raw_stream;
    sc_out< sc_lv<8> > outStream_LUMA_V_V_TDATA;
    sc_out< sc_logic > outStream_LUMA_V_V_TVALID;
    sc_in< sc_logic > outStream_LUMA_V_V_TREADY;
    sc_out< sc_lv<8> > outStream_CHROMA_V_V_TDATA;
    sc_out< sc_logic > outStream_CHROMA_V_V_TVALID;
    sc_in< sc_logic > outStream_CHROMA_V_V_TREADY;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<1> > ap_var_for_const3;
    sc_signal< sc_lv<1> > ap_var_for_const9;
    sc_signal< sc_lv<2> > ap_var_for_const5;
    sc_signal< sc_lv<32> > ap_var_for_const7;
    sc_signal< sc_lv<3> > ap_var_for_const4;
    sc_signal< sc_lv<4> > ap_var_for_const6;
    sc_signal< sc_lv<8> > ap_var_for_const8;


    // Module declarations
    ov7670_prova(sc_module_name name);
    SC_HAS_PROCESS(ov7670_prova);

    ~ov7670_prova();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    ov7670_prova_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* ov7670_prova_AXILiteS_s_axi_U;
    ov7670_prova_outStream_grayscale_V_m_axi<0,8,32,5,16,16,16,16,C_M_AXI_OUTSTREAM_GRAYSCALE_V_ID_WIDTH,C_M_AXI_OUTSTREAM_GRAYSCALE_V_ADDR_WIDTH,C_M_AXI_OUTSTREAM_GRAYSCALE_V_DATA_WIDTH,C_M_AXI_OUTSTREAM_GRAYSCALE_V_AWUSER_WIDTH,C_M_AXI_OUTSTREAM_GRAYSCALE_V_ARUSER_WIDTH,C_M_AXI_OUTSTREAM_GRAYSCALE_V_WUSER_WIDTH,C_M_AXI_OUTSTREAM_GRAYSCALE_V_RUSER_WIDTH,C_M_AXI_OUTSTREAM_GRAYSCALE_V_BUSER_WIDTH,C_M_AXI_OUTSTREAM_GRAYSCALE_V_TARGET_ADDR,C_M_AXI_OUTSTREAM_GRAYSCALE_V_USER_VALUE,C_M_AXI_OUTSTREAM_GRAYSCALE_V_PROT_VALUE,C_M_AXI_OUTSTREAM_GRAYSCALE_V_CACHE_VALUE>* ov7670_prova_outStream_grayscale_V_m_axi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > inStream_V_V_0_data_out;
    sc_signal< sc_logic > inStream_V_V_0_vld_in;
    sc_signal< sc_logic > inStream_V_V_0_vld_out;
    sc_signal< sc_logic > inStream_V_V_0_ack_in;
    sc_signal< sc_logic > inStream_V_V_0_ack_out;
    sc_signal< sc_lv<8> > inStream_V_V_0_payload_A;
    sc_signal< sc_lv<8> > inStream_V_V_0_payload_B;
    sc_signal< sc_logic > inStream_V_V_0_sel_rd;
    sc_signal< sc_logic > inStream_V_V_0_sel_wr;
    sc_signal< sc_logic > inStream_V_V_0_sel;
    sc_signal< sc_logic > inStream_V_V_0_load_A;
    sc_signal< sc_logic > inStream_V_V_0_load_B;
    sc_signal< sc_lv<2> > inStream_V_V_0_state;
    sc_signal< sc_logic > inStream_V_V_0_state_cmp_full;
    sc_signal< sc_lv<8> > outStream_LUMA_V_V_1_data_out;
    sc_signal< sc_logic > outStream_LUMA_V_V_1_vld_in;
    sc_signal< sc_logic > outStream_LUMA_V_V_1_vld_out;
    sc_signal< sc_logic > outStream_LUMA_V_V_1_ack_in;
    sc_signal< sc_logic > outStream_LUMA_V_V_1_ack_out;
    sc_signal< sc_lv<8> > outStream_LUMA_V_V_1_payload_A;
    sc_signal< sc_lv<8> > outStream_LUMA_V_V_1_payload_B;
    sc_signal< sc_logic > outStream_LUMA_V_V_1_sel_rd;
    sc_signal< sc_logic > outStream_LUMA_V_V_1_sel_wr;
    sc_signal< sc_logic > outStream_LUMA_V_V_1_sel;
    sc_signal< sc_logic > outStream_LUMA_V_V_1_load_A;
    sc_signal< sc_logic > outStream_LUMA_V_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_LUMA_V_V_1_state;
    sc_signal< sc_logic > outStream_LUMA_V_V_1_state_cmp_full;
    sc_signal< sc_lv<8> > outStream_CHROMA_V_V_1_data_out;
    sc_signal< sc_logic > outStream_CHROMA_V_V_1_vld_in;
    sc_signal< sc_logic > outStream_CHROMA_V_V_1_vld_out;
    sc_signal< sc_logic > outStream_CHROMA_V_V_1_ack_in;
    sc_signal< sc_logic > outStream_CHROMA_V_V_1_ack_out;
    sc_signal< sc_lv<8> > outStream_CHROMA_V_V_1_payload_A;
    sc_signal< sc_lv<8> > outStream_CHROMA_V_V_1_payload_B;
    sc_signal< sc_logic > outStream_CHROMA_V_V_1_sel_rd;
    sc_signal< sc_logic > outStream_CHROMA_V_V_1_sel_wr;
    sc_signal< sc_logic > outStream_CHROMA_V_V_1_sel;
    sc_signal< sc_logic > outStream_CHROMA_V_V_1_load_A;
    sc_signal< sc_logic > outStream_CHROMA_V_V_1_load_B;
    sc_signal< sc_lv<2> > outStream_CHROMA_V_V_1_state;
    sc_signal< sc_logic > outStream_CHROMA_V_V_1_state_cmp_full;
    sc_signal< sc_lv<64> > base_address;
    sc_signal< sc_lv<1> > grayscale_valid;
    sc_signal< sc_lv<32> > inner_index_V;
    sc_signal< sc_logic > inStream_V_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > outStream_grayscale_V_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > outStream_grayscale_V_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > outStream_grayscale_V_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > outStream_LUMA_V_V_TDATA_blk_n;
    sc_signal< sc_lv<1> > enable_raw_stream_re_read_fu_78_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > grayscale_valid_load_reg_195;
    sc_signal< sc_logic > outStream_CHROMA_V_V_TDATA_blk_n;
    sc_signal< sc_lv<1> > grayscale_valid_load_load_fu_116_p1;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > outStream_grayscale_V_AWVALID;
    sc_signal< sc_logic > outStream_grayscale_V_AWREADY;
    sc_signal< sc_logic > outStream_grayscale_V_WVALID;
    sc_signal< sc_logic > outStream_grayscale_V_WREADY;
    sc_signal< sc_logic > outStream_grayscale_V_ARREADY;
    sc_signal< sc_logic > outStream_grayscale_V_RVALID;
    sc_signal< sc_lv<8> > outStream_grayscale_V_RDATA;
    sc_signal< sc_logic > outStream_grayscale_V_RLAST;
    sc_signal< sc_lv<1> > outStream_grayscale_V_RID;
    sc_signal< sc_lv<1> > outStream_grayscale_V_RUSER;
    sc_signal< sc_lv<2> > outStream_grayscale_V_RRESP;
    sc_signal< sc_logic > outStream_grayscale_V_BVALID;
    sc_signal< sc_logic > outStream_grayscale_V_BREADY;
    sc_signal< sc_lv<2> > outStream_grayscale_V_BRESP;
    sc_signal< sc_lv<1> > outStream_grayscale_V_BID;
    sc_signal< sc_lv<1> > outStream_grayscale_V_BUSER;
    sc_signal< sc_lv<64> > base_address_read_reg_180;
    sc_signal< bool > ap_predicate_op35_write_state2;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_lv<8> > tmp_V_reg_189;
    sc_signal< sc_lv<32> > outStream_grayscale_s_reg_200;
    sc_signal< sc_lv<64> > tmp_7_fu_147_p1;
    sc_signal< sc_logic > ap_reg_ioackin_outStream_grayscale_V_AWREADY;
    sc_signal< sc_logic > ap_sig_ioackin_outStream_grayscale_V_AWREADY;
    sc_signal< bool > ap_block_state10_io;
    sc_signal< sc_logic > ap_reg_ioackin_outStream_grayscale_V_WREADY;
    sc_signal< sc_logic > ap_sig_ioackin_outStream_grayscale_V_WREADY;
    sc_signal< sc_lv<1> > tmp_s_fu_169_p2;
    sc_signal< bool > ap_block_state11;
    sc_signal< bool > ap_predicate_op57_write_state11;
    sc_signal< bool > ap_block_state11_io;
    sc_signal< sc_lv<32> > tmp_8_fu_157_p2;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< sc_lv<1> > tmp_3_fu_124_p2;
    sc_signal< sc_lv<32> > t_V_fu_130_p3;
    sc_signal< sc_lv<32> > tmp_fu_138_p1;
    sc_signal< sc_lv<32> > offset_fu_141_p2;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_2;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_OUTSTREAM_GRAYSCALE_V_TARGET_ADDR;
    static const int C_M_AXI_OUTSTREAM_GRAYSCALE_V_USER_VALUE;
    static const int C_M_AXI_OUTSTREAM_GRAYSCALE_V_PROT_VALUE;
    static const int C_M_AXI_OUTSTREAM_GRAYSCALE_V_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_4B000;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const8();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_state10_io();
    void thread_ap_block_state11();
    void thread_ap_block_state11_io();
    void thread_ap_block_state2_io();
    void thread_ap_block_state3_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op35_write_state2();
    void thread_ap_predicate_op57_write_state11();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_outStream_grayscale_V_AWREADY();
    void thread_ap_sig_ioackin_outStream_grayscale_V_WREADY();
    void thread_enable_raw_stream_re_read_fu_78_p2();
    void thread_grayscale_valid_load_load_fu_116_p1();
    void thread_inStream_V_V_0_ack_in();
    void thread_inStream_V_V_0_ack_out();
    void thread_inStream_V_V_0_data_out();
    void thread_inStream_V_V_0_load_A();
    void thread_inStream_V_V_0_load_B();
    void thread_inStream_V_V_0_sel();
    void thread_inStream_V_V_0_state_cmp_full();
    void thread_inStream_V_V_0_vld_in();
    void thread_inStream_V_V_0_vld_out();
    void thread_inStream_V_V_TDATA_blk_n();
    void thread_inStream_V_V_TREADY();
    void thread_offset_fu_141_p2();
    void thread_outStream_CHROMA_V_V_1_ack_in();
    void thread_outStream_CHROMA_V_V_1_ack_out();
    void thread_outStream_CHROMA_V_V_1_data_out();
    void thread_outStream_CHROMA_V_V_1_load_A();
    void thread_outStream_CHROMA_V_V_1_load_B();
    void thread_outStream_CHROMA_V_V_1_sel();
    void thread_outStream_CHROMA_V_V_1_state_cmp_full();
    void thread_outStream_CHROMA_V_V_1_vld_in();
    void thread_outStream_CHROMA_V_V_1_vld_out();
    void thread_outStream_CHROMA_V_V_TDATA();
    void thread_outStream_CHROMA_V_V_TDATA_blk_n();
    void thread_outStream_CHROMA_V_V_TVALID();
    void thread_outStream_LUMA_V_V_1_ack_in();
    void thread_outStream_LUMA_V_V_1_ack_out();
    void thread_outStream_LUMA_V_V_1_data_out();
    void thread_outStream_LUMA_V_V_1_load_A();
    void thread_outStream_LUMA_V_V_1_load_B();
    void thread_outStream_LUMA_V_V_1_sel();
    void thread_outStream_LUMA_V_V_1_state_cmp_full();
    void thread_outStream_LUMA_V_V_1_vld_in();
    void thread_outStream_LUMA_V_V_1_vld_out();
    void thread_outStream_LUMA_V_V_TDATA();
    void thread_outStream_LUMA_V_V_TDATA_blk_n();
    void thread_outStream_LUMA_V_V_TVALID();
    void thread_outStream_grayscale_V_AWVALID();
    void thread_outStream_grayscale_V_BREADY();
    void thread_outStream_grayscale_V_WVALID();
    void thread_outStream_grayscale_V_blk_n_AW();
    void thread_outStream_grayscale_V_blk_n_B();
    void thread_outStream_grayscale_V_blk_n_W();
    void thread_t_V_fu_130_p3();
    void thread_tmp_3_fu_124_p2();
    void thread_tmp_7_fu_147_p1();
    void thread_tmp_8_fu_157_p2();
    void thread_tmp_fu_138_p1();
    void thread_tmp_s_fu_169_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
