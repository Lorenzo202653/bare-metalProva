// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ov7670_diretto.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ov7670_diretto::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ov7670_diretto::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state1 = "1";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state2 = "10";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state3 = "100";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state4 = "1000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state5 = "10000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state6 = "100000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state7 = "1000000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state8 = "10000000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state9 = "100000000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state10 = "1000000000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state11 = "10000000000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state12 = "100000000000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_pp0_stage0 = "1000000000000000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state19 = "10000000000000000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state20 = "100000000000000000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state21 = "1000000000000000000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state22 = "10000000000000000000";
const sc_lv<21> ov7670_diretto::ap_ST_fsm_state23 = "100000000000000000000";
const sc_lv<32> ov7670_diretto::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool ov7670_diretto::ap_const_boolean_1 = true;
const sc_lv<1> ov7670_diretto::ap_const_lv1_1 = "1";
const sc_lv<32> ov7670_diretto::ap_const_lv32_1 = "1";
const sc_lv<32> ov7670_diretto::ap_const_lv32_2 = "10";
const sc_lv<32> ov7670_diretto::ap_const_lv32_7 = "111";
const sc_lv<32> ov7670_diretto::ap_const_lv32_8 = "1000";
const sc_lv<32> ov7670_diretto::ap_const_lv32_9 = "1001";
const sc_lv<32> ov7670_diretto::ap_const_lv32_E = "1110";
const bool ov7670_diretto::ap_const_boolean_0 = false;
const sc_lv<1> ov7670_diretto::ap_const_lv1_0 = "0";
const sc_lv<32> ov7670_diretto::ap_const_lv32_14 = "10100";
const int ov7670_diretto::C_S_AXI_DATA_WIDTH = "100000";
const int ov7670_diretto::C_M_AXI_DATA_OUT_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int ov7670_diretto::C_M_AXI_DATA_OUT_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int ov7670_diretto::C_M_AXI_DATA_OUT_CACHE_VALUE = "11";
const int ov7670_diretto::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> ov7670_diretto::ap_const_lv32_F = "1111";
const sc_lv<11> ov7670_diretto::ap_const_lv11_0 = "00000000000";
const sc_lv<3> ov7670_diretto::ap_const_lv3_0 = "000";
const sc_lv<2> ov7670_diretto::ap_const_lv2_0 = "00";
const sc_lv<4> ov7670_diretto::ap_const_lv4_0 = "0000";
const sc_lv<8> ov7670_diretto::ap_const_lv8_0 = "00000000";
const sc_lv<32> ov7670_diretto::ap_const_lv32_500 = "10100000000";
const sc_lv<32> ov7670_diretto::ap_const_lv32_10 = "10000";
const sc_lv<32> ov7670_diretto::ap_const_lv32_1E0 = "111100000";
const sc_lv<10> ov7670_diretto::ap_const_lv10_0 = "0000000000";
const sc_lv<11> ov7670_diretto::ap_const_lv11_500 = "10100000000";
const sc_lv<11> ov7670_diretto::ap_const_lv11_1 = "1";

ov7670_diretto::ov7670_diretto(sc_module_name name) : sc_module(name), mVcdFile(0) {
    tmp_U = new ov7670_diretto_tmp("tmp_U");
    tmp_U->clk(ap_clk);
    tmp_U->reset(ap_rst_n_inv);
    tmp_U->address0(tmp_address0);
    tmp_U->ce0(tmp_ce0);
    tmp_U->q0(tmp_q0);
    tmp_U->address1(tmp_address1);
    tmp_U->ce1(tmp_ce1);
    tmp_U->we1(tmp_we1);
    tmp_U->d1(data_in_V);
    ov7670_diretto_AXILiteS_s_axi_U = new ov7670_diretto_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("ov7670_diretto_AXILiteS_s_axi_U");
    ov7670_diretto_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    ov7670_diretto_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    ov7670_diretto_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    ov7670_diretto_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    ov7670_diretto_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    ov7670_diretto_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    ov7670_diretto_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    ov7670_diretto_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    ov7670_diretto_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    ov7670_diretto_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    ov7670_diretto_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    ov7670_diretto_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    ov7670_diretto_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    ov7670_diretto_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    ov7670_diretto_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    ov7670_diretto_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    ov7670_diretto_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    ov7670_diretto_AXILiteS_s_axi_U->ACLK(ap_clk);
    ov7670_diretto_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    ov7670_diretto_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    ov7670_diretto_AXILiteS_s_axi_U->ap_start(ap_start);
    ov7670_diretto_AXILiteS_s_axi_U->interrupt(interrupt);
    ov7670_diretto_AXILiteS_s_axi_U->ap_ready(ap_ready);
    ov7670_diretto_AXILiteS_s_axi_U->ap_done(ap_done);
    ov7670_diretto_AXILiteS_s_axi_U->ap_idle(ap_idle);
    ov7670_diretto_AXILiteS_s_axi_U->data_out_offset(data_out_offset);
    ov7670_diretto_data_out_m_axi_U = new ov7670_diretto_data_out_m_axi<0,8,32,5,16,16,16,16,C_M_AXI_DATA_OUT_ID_WIDTH,C_M_AXI_DATA_OUT_ADDR_WIDTH,C_M_AXI_DATA_OUT_DATA_WIDTH,C_M_AXI_DATA_OUT_AWUSER_WIDTH,C_M_AXI_DATA_OUT_ARUSER_WIDTH,C_M_AXI_DATA_OUT_WUSER_WIDTH,C_M_AXI_DATA_OUT_RUSER_WIDTH,C_M_AXI_DATA_OUT_BUSER_WIDTH,C_M_AXI_DATA_OUT_USER_VALUE,C_M_AXI_DATA_OUT_PROT_VALUE,C_M_AXI_DATA_OUT_CACHE_VALUE>("ov7670_diretto_data_out_m_axi_U");
    ov7670_diretto_data_out_m_axi_U->AWVALID(m_axi_data_out_AWVALID);
    ov7670_diretto_data_out_m_axi_U->AWREADY(m_axi_data_out_AWREADY);
    ov7670_diretto_data_out_m_axi_U->AWADDR(m_axi_data_out_AWADDR);
    ov7670_diretto_data_out_m_axi_U->AWID(m_axi_data_out_AWID);
    ov7670_diretto_data_out_m_axi_U->AWLEN(m_axi_data_out_AWLEN);
    ov7670_diretto_data_out_m_axi_U->AWSIZE(m_axi_data_out_AWSIZE);
    ov7670_diretto_data_out_m_axi_U->AWBURST(m_axi_data_out_AWBURST);
    ov7670_diretto_data_out_m_axi_U->AWLOCK(m_axi_data_out_AWLOCK);
    ov7670_diretto_data_out_m_axi_U->AWCACHE(m_axi_data_out_AWCACHE);
    ov7670_diretto_data_out_m_axi_U->AWPROT(m_axi_data_out_AWPROT);
    ov7670_diretto_data_out_m_axi_U->AWQOS(m_axi_data_out_AWQOS);
    ov7670_diretto_data_out_m_axi_U->AWREGION(m_axi_data_out_AWREGION);
    ov7670_diretto_data_out_m_axi_U->AWUSER(m_axi_data_out_AWUSER);
    ov7670_diretto_data_out_m_axi_U->WVALID(m_axi_data_out_WVALID);
    ov7670_diretto_data_out_m_axi_U->WREADY(m_axi_data_out_WREADY);
    ov7670_diretto_data_out_m_axi_U->WDATA(m_axi_data_out_WDATA);
    ov7670_diretto_data_out_m_axi_U->WSTRB(m_axi_data_out_WSTRB);
    ov7670_diretto_data_out_m_axi_U->WLAST(m_axi_data_out_WLAST);
    ov7670_diretto_data_out_m_axi_U->WID(m_axi_data_out_WID);
    ov7670_diretto_data_out_m_axi_U->WUSER(m_axi_data_out_WUSER);
    ov7670_diretto_data_out_m_axi_U->ARVALID(m_axi_data_out_ARVALID);
    ov7670_diretto_data_out_m_axi_U->ARREADY(m_axi_data_out_ARREADY);
    ov7670_diretto_data_out_m_axi_U->ARADDR(m_axi_data_out_ARADDR);
    ov7670_diretto_data_out_m_axi_U->ARID(m_axi_data_out_ARID);
    ov7670_diretto_data_out_m_axi_U->ARLEN(m_axi_data_out_ARLEN);
    ov7670_diretto_data_out_m_axi_U->ARSIZE(m_axi_data_out_ARSIZE);
    ov7670_diretto_data_out_m_axi_U->ARBURST(m_axi_data_out_ARBURST);
    ov7670_diretto_data_out_m_axi_U->ARLOCK(m_axi_data_out_ARLOCK);
    ov7670_diretto_data_out_m_axi_U->ARCACHE(m_axi_data_out_ARCACHE);
    ov7670_diretto_data_out_m_axi_U->ARPROT(m_axi_data_out_ARPROT);
    ov7670_diretto_data_out_m_axi_U->ARQOS(m_axi_data_out_ARQOS);
    ov7670_diretto_data_out_m_axi_U->ARREGION(m_axi_data_out_ARREGION);
    ov7670_diretto_data_out_m_axi_U->ARUSER(m_axi_data_out_ARUSER);
    ov7670_diretto_data_out_m_axi_U->RVALID(m_axi_data_out_RVALID);
    ov7670_diretto_data_out_m_axi_U->RREADY(m_axi_data_out_RREADY);
    ov7670_diretto_data_out_m_axi_U->RDATA(m_axi_data_out_RDATA);
    ov7670_diretto_data_out_m_axi_U->RLAST(m_axi_data_out_RLAST);
    ov7670_diretto_data_out_m_axi_U->RID(m_axi_data_out_RID);
    ov7670_diretto_data_out_m_axi_U->RUSER(m_axi_data_out_RUSER);
    ov7670_diretto_data_out_m_axi_U->RRESP(m_axi_data_out_RRESP);
    ov7670_diretto_data_out_m_axi_U->BVALID(m_axi_data_out_BVALID);
    ov7670_diretto_data_out_m_axi_U->BREADY(m_axi_data_out_BREADY);
    ov7670_diretto_data_out_m_axi_U->BRESP(m_axi_data_out_BRESP);
    ov7670_diretto_data_out_m_axi_U->BID(m_axi_data_out_BID);
    ov7670_diretto_data_out_m_axi_U->BUSER(m_axi_data_out_BUSER);
    ov7670_diretto_data_out_m_axi_U->ACLK(ap_clk);
    ov7670_diretto_data_out_m_axi_U->ARESET(ap_rst_n_inv);
    ov7670_diretto_data_out_m_axi_U->ACLK_EN(ap_var_for_const0);
    ov7670_diretto_data_out_m_axi_U->I_ARVALID(ap_var_for_const1);
    ov7670_diretto_data_out_m_axi_U->I_ARREADY(data_out_ARREADY);
    ov7670_diretto_data_out_m_axi_U->I_ARADDR(ap_var_for_const2);
    ov7670_diretto_data_out_m_axi_U->I_ARID(ap_var_for_const3);
    ov7670_diretto_data_out_m_axi_U->I_ARLEN(ap_var_for_const2);
    ov7670_diretto_data_out_m_axi_U->I_ARSIZE(ap_var_for_const4);
    ov7670_diretto_data_out_m_axi_U->I_ARLOCK(ap_var_for_const5);
    ov7670_diretto_data_out_m_axi_U->I_ARCACHE(ap_var_for_const6);
    ov7670_diretto_data_out_m_axi_U->I_ARQOS(ap_var_for_const6);
    ov7670_diretto_data_out_m_axi_U->I_ARPROT(ap_var_for_const4);
    ov7670_diretto_data_out_m_axi_U->I_ARUSER(ap_var_for_const3);
    ov7670_diretto_data_out_m_axi_U->I_ARBURST(ap_var_for_const5);
    ov7670_diretto_data_out_m_axi_U->I_ARREGION(ap_var_for_const6);
    ov7670_diretto_data_out_m_axi_U->I_RVALID(data_out_RVALID);
    ov7670_diretto_data_out_m_axi_U->I_RREADY(ap_var_for_const1);
    ov7670_diretto_data_out_m_axi_U->I_RDATA(data_out_RDATA);
    ov7670_diretto_data_out_m_axi_U->I_RID(data_out_RID);
    ov7670_diretto_data_out_m_axi_U->I_RUSER(data_out_RUSER);
    ov7670_diretto_data_out_m_axi_U->I_RRESP(data_out_RRESP);
    ov7670_diretto_data_out_m_axi_U->I_RLAST(data_out_RLAST);
    ov7670_diretto_data_out_m_axi_U->I_AWVALID(data_out_AWVALID);
    ov7670_diretto_data_out_m_axi_U->I_AWREADY(data_out_AWREADY);
    ov7670_diretto_data_out_m_axi_U->I_AWADDR(data_out_AWADDR);
    ov7670_diretto_data_out_m_axi_U->I_AWID(ap_var_for_const3);
    ov7670_diretto_data_out_m_axi_U->I_AWLEN(data_out_AWLEN);
    ov7670_diretto_data_out_m_axi_U->I_AWSIZE(ap_var_for_const4);
    ov7670_diretto_data_out_m_axi_U->I_AWLOCK(ap_var_for_const5);
    ov7670_diretto_data_out_m_axi_U->I_AWCACHE(ap_var_for_const6);
    ov7670_diretto_data_out_m_axi_U->I_AWQOS(ap_var_for_const6);
    ov7670_diretto_data_out_m_axi_U->I_AWPROT(ap_var_for_const4);
    ov7670_diretto_data_out_m_axi_U->I_AWUSER(ap_var_for_const3);
    ov7670_diretto_data_out_m_axi_U->I_AWBURST(ap_var_for_const5);
    ov7670_diretto_data_out_m_axi_U->I_AWREGION(ap_var_for_const6);
    ov7670_diretto_data_out_m_axi_U->I_WVALID(data_out_WVALID);
    ov7670_diretto_data_out_m_axi_U->I_WREADY(data_out_WREADY);
    ov7670_diretto_data_out_m_axi_U->I_WDATA(data_out_WDATA);
    ov7670_diretto_data_out_m_axi_U->I_WID(ap_var_for_const3);
    ov7670_diretto_data_out_m_axi_U->I_WUSER(ap_var_for_const3);
    ov7670_diretto_data_out_m_axi_U->I_WLAST(ap_var_for_const1);
    ov7670_diretto_data_out_m_axi_U->I_WSTRB(ap_var_for_const7);
    ov7670_diretto_data_out_m_axi_U->I_BVALID(data_out_BVALID);
    ov7670_diretto_data_out_m_axi_U->I_BREADY(data_out_BREADY);
    ov7670_diretto_data_out_m_axi_U->I_BRESP(data_out_BRESP);
    ov7670_diretto_data_out_m_axi_U->I_BID(data_out_BID);
    ov7670_diretto_data_out_m_axi_U->I_BUSER(data_out_BUSER);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state18_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state18_io );

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state18_io);
    sensitive << ( exitcond_reg_470_pp0_iter1_reg );
    sensitive << ( ap_sig_ioackin_data_out_WREADY );

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state23);
    sensitive << ( data_out_BVALID );
    sensitive << ( ap_predicate_op134_writeresp_state23 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state16);
    sensitive << ( exitcond_fu_395_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( data_out_BVALID );
    sensitive << ( ap_predicate_op134_writeresp_state23 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_predicate_op134_writeresp_state23);
    sensitive << ( href_V );
    sensitive << ( vsync_V );
    sensitive << ( first_load_reg_443 );
    sensitive << ( or_cond_reg_452 );
    sensitive << ( tmp_4_reg_459 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( data_out_BVALID );
    sensitive << ( ap_predicate_op134_writeresp_state23 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_data_out_AWREADY);
    sensitive << ( data_out_AWREADY );
    sensitive << ( ap_reg_ioackin_data_out_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_data_out_WREADY);
    sensitive << ( data_out_WREADY );
    sensitive << ( ap_reg_ioackin_data_out_WREADY );

    SC_METHOD(thread_data_out2_sum_cast_fu_368_p1);
    sensitive << ( data_out2_sum_fu_362_p2 );

    SC_METHOD(thread_data_out2_sum_fu_362_p2);
    sensitive << ( tmp_5_cast_fu_254_p1 );
    sensitive << ( tmp_6_cast_fu_358_p1 );

    SC_METHOD(thread_data_out_AWADDR);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( data_out_BVALID );
    sensitive << ( data_out_addr_1_reg_437 );
    sensitive << ( data_out_addr_reg_463 );
    sensitive << ( ap_reg_ioackin_data_out_AWREADY );

    SC_METHOD(thread_data_out_AWLEN);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( data_out_BVALID );
    sensitive << ( ap_reg_ioackin_data_out_AWREADY );

    SC_METHOD(thread_data_out_AWVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( data_out_BVALID );
    sensitive << ( ap_reg_ioackin_data_out_AWREADY );

    SC_METHOD(thread_data_out_BREADY);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( data_out_BVALID );
    sensitive << ( ap_sig_ioackin_data_out_AWREADY );
    sensitive << ( ap_predicate_op134_writeresp_state23 );

    SC_METHOD(thread_data_out_WDATA);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_reg_470_pp0_iter1_reg );
    sensitive << ( reg_244 );
    sensitive << ( ap_reg_ioackin_data_out_WREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_data_out_WVALID);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_reg_470_pp0_iter1_reg );
    sensitive << ( ap_reg_ioackin_data_out_WREADY );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_data_out_blk_n_AW);
    sensitive << ( m_axi_data_out_AWREADY );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_data_out_blk_n_B);
    sensitive << ( m_axi_data_out_BVALID );
    sensitive << ( href_V );
    sensitive << ( vsync_V );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( first_load_reg_443 );
    sensitive << ( or_cond_reg_452 );
    sensitive << ( tmp_4_reg_459 );

    SC_METHOD(thread_data_out_blk_n_W);
    sensitive << ( m_axi_data_out_WREADY );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_470_pp0_iter1_reg );

    SC_METHOD(thread_exitcond_fu_395_p2);
    sensitive << ( indvar_reg_233 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_first_load_load_fu_264_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( first );
    sensitive << ( vsync_V_read_read_fu_128_p2 );

    SC_METHOD(thread_frame_valid_V);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( vsync_V );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( data_out_BVALID );
    sensitive << ( first_load_load_fu_264_p1 );
    sensitive << ( or_cond_fu_290_p2 );
    sensitive << ( frame_valid_V_preg );

    SC_METHOD(thread_href_V_read_read_fu_134_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( href_V );

    SC_METHOD(thread_indvar1_fu_407_p1);
    sensitive << ( indvar_reg_233 );

    SC_METHOD(thread_indvar_next_fu_401_p2);
    sensitive << ( indvar_reg_233 );

    SC_METHOD(thread_line_valid_V);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( href_V );
    sensitive << ( vsync_V );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( first_load_reg_443 );
    sensitive << ( or_cond_reg_452 );
    sensitive << ( href_V_read_read_fu_134_p2 );
    sensitive << ( tmp_4_reg_459 );
    sensitive << ( data_out_BVALID );
    sensitive << ( first_load_load_fu_264_p1 );
    sensitive << ( or_cond_fu_290_p2 );
    sensitive << ( tmp_4_fu_318_p2 );
    sensitive << ( ap_predicate_op134_writeresp_state23 );
    sensitive << ( line_valid_V_preg );

    SC_METHOD(thread_offset_fu_352_p2);
    sensitive << ( p_shl6_cast_fu_348_p1 );
    sensitive << ( p_shl_cast_fu_336_p1 );

    SC_METHOD(thread_or_cond1_fu_302_p2);
    sensitive << ( p_not_fu_274_p2 );
    sensitive << ( tmp_1_fu_296_p2 );

    SC_METHOD(thread_or_cond_fu_290_p2);
    sensitive << ( tmp_1_1_fu_284_p2 );
    sensitive << ( p_not_fu_274_p2 );

    SC_METHOD(thread_p_not_fu_274_p2);
    sensitive << ( vsync_V );

    SC_METHOD(thread_p_shl6_cast_fu_348_p1);
    sensitive << ( p_shl6_fu_340_p3 );

    SC_METHOD(thread_p_shl6_fu_340_p3);
    sensitive << ( tmp_1_2_fu_324_p1 );

    SC_METHOD(thread_p_shl_cast_fu_336_p1);
    sensitive << ( p_shl_fu_328_p3 );

    SC_METHOD(thread_p_shl_fu_328_p3);
    sensitive << ( tmp_1_2_fu_324_p1 );

    SC_METHOD(thread_tmp_1_1_fu_284_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( vsync_V );
    sensitive << ( count_lines );
    sensitive << ( first_load_load_fu_264_p1 );

    SC_METHOD(thread_tmp_1_2_fu_324_p1);
    sensitive << ( count_lines );

    SC_METHOD(thread_tmp_1_fu_296_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( vsync_V );
    sensitive << ( count_lines );
    sensitive << ( first_load_load_fu_264_p1 );
    sensitive << ( or_cond_fu_290_p2 );

    SC_METHOD(thread_tmp_2_fu_378_p1);
    sensitive << ( count_readings );

    SC_METHOD(thread_tmp_3_fu_383_p2);
    sensitive << ( count_readings );

    SC_METHOD(thread_tmp_4_fu_318_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( href_V );
    sensitive << ( vsync_V );
    sensitive << ( count_readings );
    sensitive << ( first_load_load_fu_264_p1 );
    sensitive << ( or_cond_fu_290_p2 );

    SC_METHOD(thread_tmp_5_cast_fu_254_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_out_offset );

    SC_METHOD(thread_tmp_5_cast_fu_254_p1);
    sensitive << ( tmp_5_cast_fu_254_p0 );

    SC_METHOD(thread_tmp_5_fu_250_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_out_offset );

    SC_METHOD(thread_tmp_5_fu_250_p1);
    sensitive << ( tmp_5_fu_250_p0 );

    SC_METHOD(thread_tmp_6_cast_fu_358_p1);
    sensitive << ( offset_fu_352_p2 );

    SC_METHOD(thread_tmp_8_fu_418_p2);
    sensitive << ( count_lines_load_reg_447 );

    SC_METHOD(thread_tmp_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( indvar1_fu_407_p1 );

    SC_METHOD(thread_tmp_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_2_fu_378_p1 );

    SC_METHOD(thread_tmp_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_tmp_we1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( vsync_V );
    sensitive << ( href_V_read_read_fu_134_p2 );
    sensitive << ( first_load_load_fu_264_p1 );
    sensitive << ( or_cond_fu_290_p2 );

    SC_METHOD(thread_vsync_V_read_read_fu_128_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( vsync_V );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( href_V );
    sensitive << ( vsync_V );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( href_V_read_read_fu_134_p2 );
    sensitive << ( vsync_V_read_read_fu_128_p2 );
    sensitive << ( data_out_BVALID );
    sensitive << ( ap_sig_ioackin_data_out_AWREADY );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_sig_ioackin_data_out_WREADY );
    sensitive << ( first_load_load_fu_264_p1 );
    sensitive << ( or_cond_fu_290_p2 );
    sensitive << ( tmp_4_fu_318_p2 );
    sensitive << ( exitcond_fu_395_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_predicate_op134_writeresp_state23 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const6);

    ap_CS_fsm = "000000000000000000001";
    first = "1";
    count_lines = "00000000000000000000000000000000";
    count_readings = "00000000000000000000000000000000";
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_reg_ioackin_data_out_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_data_out_WREADY = SC_LOGIC_0;
    frame_valid_V_preg = "0";
    line_valid_V_preg = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ov7670_diretto_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_data_out_AWVALID, "(port)m_axi_data_out_AWVALID");
    sc_trace(mVcdFile, m_axi_data_out_AWREADY, "(port)m_axi_data_out_AWREADY");
    sc_trace(mVcdFile, m_axi_data_out_AWADDR, "(port)m_axi_data_out_AWADDR");
    sc_trace(mVcdFile, m_axi_data_out_AWID, "(port)m_axi_data_out_AWID");
    sc_trace(mVcdFile, m_axi_data_out_AWLEN, "(port)m_axi_data_out_AWLEN");
    sc_trace(mVcdFile, m_axi_data_out_AWSIZE, "(port)m_axi_data_out_AWSIZE");
    sc_trace(mVcdFile, m_axi_data_out_AWBURST, "(port)m_axi_data_out_AWBURST");
    sc_trace(mVcdFile, m_axi_data_out_AWLOCK, "(port)m_axi_data_out_AWLOCK");
    sc_trace(mVcdFile, m_axi_data_out_AWCACHE, "(port)m_axi_data_out_AWCACHE");
    sc_trace(mVcdFile, m_axi_data_out_AWPROT, "(port)m_axi_data_out_AWPROT");
    sc_trace(mVcdFile, m_axi_data_out_AWQOS, "(port)m_axi_data_out_AWQOS");
    sc_trace(mVcdFile, m_axi_data_out_AWREGION, "(port)m_axi_data_out_AWREGION");
    sc_trace(mVcdFile, m_axi_data_out_AWUSER, "(port)m_axi_data_out_AWUSER");
    sc_trace(mVcdFile, m_axi_data_out_WVALID, "(port)m_axi_data_out_WVALID");
    sc_trace(mVcdFile, m_axi_data_out_WREADY, "(port)m_axi_data_out_WREADY");
    sc_trace(mVcdFile, m_axi_data_out_WDATA, "(port)m_axi_data_out_WDATA");
    sc_trace(mVcdFile, m_axi_data_out_WSTRB, "(port)m_axi_data_out_WSTRB");
    sc_trace(mVcdFile, m_axi_data_out_WLAST, "(port)m_axi_data_out_WLAST");
    sc_trace(mVcdFile, m_axi_data_out_WID, "(port)m_axi_data_out_WID");
    sc_trace(mVcdFile, m_axi_data_out_WUSER, "(port)m_axi_data_out_WUSER");
    sc_trace(mVcdFile, m_axi_data_out_ARVALID, "(port)m_axi_data_out_ARVALID");
    sc_trace(mVcdFile, m_axi_data_out_ARREADY, "(port)m_axi_data_out_ARREADY");
    sc_trace(mVcdFile, m_axi_data_out_ARADDR, "(port)m_axi_data_out_ARADDR");
    sc_trace(mVcdFile, m_axi_data_out_ARID, "(port)m_axi_data_out_ARID");
    sc_trace(mVcdFile, m_axi_data_out_ARLEN, "(port)m_axi_data_out_ARLEN");
    sc_trace(mVcdFile, m_axi_data_out_ARSIZE, "(port)m_axi_data_out_ARSIZE");
    sc_trace(mVcdFile, m_axi_data_out_ARBURST, "(port)m_axi_data_out_ARBURST");
    sc_trace(mVcdFile, m_axi_data_out_ARLOCK, "(port)m_axi_data_out_ARLOCK");
    sc_trace(mVcdFile, m_axi_data_out_ARCACHE, "(port)m_axi_data_out_ARCACHE");
    sc_trace(mVcdFile, m_axi_data_out_ARPROT, "(port)m_axi_data_out_ARPROT");
    sc_trace(mVcdFile, m_axi_data_out_ARQOS, "(port)m_axi_data_out_ARQOS");
    sc_trace(mVcdFile, m_axi_data_out_ARREGION, "(port)m_axi_data_out_ARREGION");
    sc_trace(mVcdFile, m_axi_data_out_ARUSER, "(port)m_axi_data_out_ARUSER");
    sc_trace(mVcdFile, m_axi_data_out_RVALID, "(port)m_axi_data_out_RVALID");
    sc_trace(mVcdFile, m_axi_data_out_RREADY, "(port)m_axi_data_out_RREADY");
    sc_trace(mVcdFile, m_axi_data_out_RDATA, "(port)m_axi_data_out_RDATA");
    sc_trace(mVcdFile, m_axi_data_out_RLAST, "(port)m_axi_data_out_RLAST");
    sc_trace(mVcdFile, m_axi_data_out_RID, "(port)m_axi_data_out_RID");
    sc_trace(mVcdFile, m_axi_data_out_RUSER, "(port)m_axi_data_out_RUSER");
    sc_trace(mVcdFile, m_axi_data_out_RRESP, "(port)m_axi_data_out_RRESP");
    sc_trace(mVcdFile, m_axi_data_out_BVALID, "(port)m_axi_data_out_BVALID");
    sc_trace(mVcdFile, m_axi_data_out_BREADY, "(port)m_axi_data_out_BREADY");
    sc_trace(mVcdFile, m_axi_data_out_BRESP, "(port)m_axi_data_out_BRESP");
    sc_trace(mVcdFile, m_axi_data_out_BID, "(port)m_axi_data_out_BID");
    sc_trace(mVcdFile, m_axi_data_out_BUSER, "(port)m_axi_data_out_BUSER");
    sc_trace(mVcdFile, data_in_V, "(port)data_in_V");
    sc_trace(mVcdFile, href_V, "(port)href_V");
    sc_trace(mVcdFile, vsync_V, "(port)vsync_V");
    sc_trace(mVcdFile, line_valid_V, "(port)line_valid_V");
    sc_trace(mVcdFile, frame_valid_V, "(port)frame_valid_V");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, data_out_offset, "data_out_offset");
    sc_trace(mVcdFile, first, "first");
    sc_trace(mVcdFile, count_lines, "count_lines");
    sc_trace(mVcdFile, count_readings, "count_readings");
    sc_trace(mVcdFile, tmp_address0, "tmp_address0");
    sc_trace(mVcdFile, tmp_ce0, "tmp_ce0");
    sc_trace(mVcdFile, tmp_q0, "tmp_q0");
    sc_trace(mVcdFile, tmp_address1, "tmp_address1");
    sc_trace(mVcdFile, tmp_ce1, "tmp_ce1");
    sc_trace(mVcdFile, tmp_we1, "tmp_we1");
    sc_trace(mVcdFile, data_out_blk_n_AW, "data_out_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, data_out_blk_n_W, "data_out_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, data_out_blk_n_B, "data_out_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_reg_470, "exitcond_reg_470");
    sc_trace(mVcdFile, exitcond_reg_470_pp0_iter1_reg, "exitcond_reg_470_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, first_load_reg_443, "first_load_reg_443");
    sc_trace(mVcdFile, or_cond_reg_452, "or_cond_reg_452");
    sc_trace(mVcdFile, href_V_read_read_fu_134_p2, "href_V_read_read_fu_134_p2");
    sc_trace(mVcdFile, tmp_4_reg_459, "tmp_4_reg_459");
    sc_trace(mVcdFile, vsync_V_read_read_fu_128_p2, "vsync_V_read_read_fu_128_p2");
    sc_trace(mVcdFile, data_out_AWVALID, "data_out_AWVALID");
    sc_trace(mVcdFile, data_out_AWREADY, "data_out_AWREADY");
    sc_trace(mVcdFile, data_out_AWADDR, "data_out_AWADDR");
    sc_trace(mVcdFile, data_out_AWLEN, "data_out_AWLEN");
    sc_trace(mVcdFile, data_out_WVALID, "data_out_WVALID");
    sc_trace(mVcdFile, data_out_WREADY, "data_out_WREADY");
    sc_trace(mVcdFile, data_out_WDATA, "data_out_WDATA");
    sc_trace(mVcdFile, data_out_ARREADY, "data_out_ARREADY");
    sc_trace(mVcdFile, data_out_RVALID, "data_out_RVALID");
    sc_trace(mVcdFile, data_out_RDATA, "data_out_RDATA");
    sc_trace(mVcdFile, data_out_RLAST, "data_out_RLAST");
    sc_trace(mVcdFile, data_out_RID, "data_out_RID");
    sc_trace(mVcdFile, data_out_RUSER, "data_out_RUSER");
    sc_trace(mVcdFile, data_out_RRESP, "data_out_RRESP");
    sc_trace(mVcdFile, data_out_BVALID, "data_out_BVALID");
    sc_trace(mVcdFile, data_out_BREADY, "data_out_BREADY");
    sc_trace(mVcdFile, data_out_BRESP, "data_out_BRESP");
    sc_trace(mVcdFile, data_out_BID, "data_out_BID");
    sc_trace(mVcdFile, data_out_BUSER, "data_out_BUSER");
    sc_trace(mVcdFile, indvar_reg_233, "indvar_reg_233");
    sc_trace(mVcdFile, reg_244, "reg_244");
    sc_trace(mVcdFile, ap_sig_ioackin_data_out_AWREADY, "ap_sig_ioackin_data_out_AWREADY");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter0, "ap_block_state16_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter1, "ap_block_state17_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter2, "ap_block_state18_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_sig_ioackin_data_out_WREADY, "ap_sig_ioackin_data_out_WREADY");
    sc_trace(mVcdFile, ap_block_state18_io, "ap_block_state18_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, data_out_addr_1_reg_437, "data_out_addr_1_reg_437");
    sc_trace(mVcdFile, first_load_load_fu_264_p1, "first_load_load_fu_264_p1");
    sc_trace(mVcdFile, count_lines_load_reg_447, "count_lines_load_reg_447");
    sc_trace(mVcdFile, or_cond_fu_290_p2, "or_cond_fu_290_p2");
    sc_trace(mVcdFile, tmp_4_fu_318_p2, "tmp_4_fu_318_p2");
    sc_trace(mVcdFile, data_out_addr_reg_463, "data_out_addr_reg_463");
    sc_trace(mVcdFile, exitcond_fu_395_p2, "exitcond_fu_395_p2");
    sc_trace(mVcdFile, indvar_next_fu_401_p2, "indvar_next_fu_401_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state16, "ap_condition_pp0_exit_iter0_state16");
    sc_trace(mVcdFile, tmp_2_fu_378_p1, "tmp_2_fu_378_p1");
    sc_trace(mVcdFile, indvar1_fu_407_p1, "indvar1_fu_407_p1");
    sc_trace(mVcdFile, tmp_5_fu_250_p1, "tmp_5_fu_250_p1");
    sc_trace(mVcdFile, data_out2_sum_cast_fu_368_p1, "data_out2_sum_cast_fu_368_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_data_out_AWREADY, "ap_reg_ioackin_data_out_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_data_out_WREADY, "ap_reg_ioackin_data_out_WREADY");
    sc_trace(mVcdFile, ap_predicate_op134_writeresp_state23, "ap_predicate_op134_writeresp_state23");
    sc_trace(mVcdFile, ap_block_state23, "ap_block_state23");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, or_cond1_fu_302_p2, "or_cond1_fu_302_p2");
    sc_trace(mVcdFile, tmp_8_fu_418_p2, "tmp_8_fu_418_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, tmp_3_fu_383_p2, "tmp_3_fu_383_p2");
    sc_trace(mVcdFile, frame_valid_V_preg, "frame_valid_V_preg");
    sc_trace(mVcdFile, line_valid_V_preg, "line_valid_V_preg");
    sc_trace(mVcdFile, tmp_5_fu_250_p0, "tmp_5_fu_250_p0");
    sc_trace(mVcdFile, tmp_5_cast_fu_254_p0, "tmp_5_cast_fu_254_p0");
    sc_trace(mVcdFile, tmp_1_1_fu_284_p2, "tmp_1_1_fu_284_p2");
    sc_trace(mVcdFile, p_not_fu_274_p2, "p_not_fu_274_p2");
    sc_trace(mVcdFile, tmp_1_fu_296_p2, "tmp_1_fu_296_p2");
    sc_trace(mVcdFile, tmp_1_2_fu_324_p1, "tmp_1_2_fu_324_p1");
    sc_trace(mVcdFile, p_shl_fu_328_p3, "p_shl_fu_328_p3");
    sc_trace(mVcdFile, p_shl6_fu_340_p3, "p_shl6_fu_340_p3");
    sc_trace(mVcdFile, p_shl6_cast_fu_348_p1, "p_shl6_cast_fu_348_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_336_p1, "p_shl_cast_fu_336_p1");
    sc_trace(mVcdFile, offset_fu_352_p2, "offset_fu_352_p2");
    sc_trace(mVcdFile, tmp_5_cast_fu_254_p1, "tmp_5_cast_fu_254_p1");
    sc_trace(mVcdFile, tmp_6_cast_fu_358_p1, "tmp_6_cast_fu_358_p1");
    sc_trace(mVcdFile, data_out2_sum_fu_362_p2, "data_out2_sum_fu_362_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("ov7670_diretto.hdltvin.dat");
    mHdltvoutHandle.open("ov7670_diretto.hdltvout.dat");
}

ov7670_diretto::~ov7670_diretto() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete tmp_U;
    delete ov7670_diretto_AXILiteS_s_axi_U;
    delete ov7670_diretto_data_out_m_axi_U;
}

void ov7670_diretto::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void ov7670_diretto::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void ov7670_diretto::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_0;
}

void ov7670_diretto::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv1_1;
}

void ov7670_diretto::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void ov7670_diretto::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv3_0;
}

void ov7670_diretto::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv2_0;
}

void ov7670_diretto::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv4_0;
}

void ov7670_diretto::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state16.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_data_out_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_out_BVALID.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state16.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state16.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_data_out_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_out_BVALID.read())))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_data_out_AWREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_data_out_AWREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_data_out_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_out_BVALID.read()))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_data_out_AWREADY.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_data_out_AWREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, data_out_AWREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, data_out_AWREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, data_out_AWREADY.read()) && 
                     esl_seteq<1,1,1>(data_out_BVALID.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_data_out_AWREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_data_out_WREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_data_out_WREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_data_out_WREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
              esl_seteq<1,1,1>(exitcond_reg_470_pp0_iter1_reg.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_data_out_WREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, data_out_WREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, data_out_WREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                     esl_seteq<1,1,1>(exitcond_reg_470_pp0_iter1_reg.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, data_out_WREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_data_out_WREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        count_lines = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
            count_lines = tmp_8_fu_418_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    ((esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
                      esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_290_p2.read()) && 
                      esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_302_p2.read())) || 
                     (esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
                      esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_290_p2.read()) && 
                      esl_seteq<1,1,1>(ap_const_lv1_0, or_cond1_fu_302_p2.read()))))) {
            count_lines = ap_const_lv32_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        count_readings = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
            count_readings = ap_const_lv32_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    ((esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
                      esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
                      esl_seteq<1,1,1>(ap_const_lv1_1, href_V_read_read_fu_134_p2.read())) || 
                     (esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
                      esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
                      esl_seteq<1,1,1>(ap_const_lv1_1, href_V_read_read_fu_134_p2.read()))))) {
            count_readings = tmp_3_fu_383_p2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        first = ap_const_lv1_1;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
             (esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) || 
              esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read())))) {
            first = ap_const_lv1_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        frame_valid_V_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
             ((esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
               esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read())) || 
              (esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
               esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()))))) {
            frame_valid_V_preg = ap_const_lv1_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                     esl_seteq<1,1,1>(data_out_BVALID.read(), ap_const_logic_1)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                     esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                     ((esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
                       esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_290_p2.read())) || 
                      (esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
                       esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_290_p2.read())))))) {
            frame_valid_V_preg = ap_const_lv1_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_395_p2.read()))) {
        indvar_reg_233 = indvar_next_fu_401_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_data_out_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_out_BVALID.read())))) {
        indvar_reg_233 = ap_const_lv11_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        line_valid_V_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
             ((esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
               esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
               esl_seteq<1,1,1>(ap_const_lv1_1, href_V_read_read_fu_134_p2.read())) || 
              (esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
               esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
               esl_seteq<1,1,1>(ap_const_lv1_1, href_V_read_read_fu_134_p2.read()))))) {
            line_valid_V_preg = ap_const_lv1_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                     esl_seteq<1,1,1>(data_out_BVALID.read(), ap_const_logic_1)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                     esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                     ((esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
                       esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
                       esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
                       esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_318_p2.read())) || 
                      (esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
                       esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
                       esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
                       esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_318_p2.read())))))) {
            line_valid_V_preg = ap_const_lv1_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && (esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) || 
  esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read())))) {
        count_lines_load_reg_447 = count_lines.read();
        or_cond_reg_452 = or_cond_fu_290_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        data_out_addr_1_reg_437 =  (sc_lv<32>) (tmp_5_fu_250_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && ((esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_318_p2.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_318_p2.read()))))) {
        data_out_addr_reg_463 =  (sc_lv<32>) (data_out2_sum_cast_fu_368_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_reg_470 = exitcond_fu_395_p2.read();
        exitcond_reg_470_pp0_iter1_reg = exitcond_reg_470.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, vsync_V_read_read_fu_128_p2.read()))) {
        first_load_reg_443 = first.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
  esl_seteq<1,1,1>(ap_sig_ioackin_data_out_AWREADY.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_reg_470.read(), ap_const_lv1_0)))) {
        reg_244 = tmp_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && ((esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()))))) {
        tmp_4_reg_459 = tmp_4_fu_318_p2.read();
    }
}

void ov7670_diretto::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[15];
}

void ov7670_diretto::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void ov7670_diretto::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void ov7670_diretto::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void ov7670_diretto::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[16];
}

void ov7670_diretto::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void ov7670_diretto::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[20];
}

void ov7670_diretto::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void ov7670_diretto::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void ov7670_diretto::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void ov7670_diretto::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ov7670_diretto::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ov7670_diretto::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state18_io.read()));
}

void ov7670_diretto::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state18_io.read()));
}

void ov7670_diretto::thread_ap_block_state16_pp0_stage0_iter0() {
    ap_block_state16_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ov7670_diretto::thread_ap_block_state17_pp0_stage0_iter1() {
    ap_block_state17_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ov7670_diretto::thread_ap_block_state18_io() {
    ap_block_state18_io = (esl_seteq<1,1,1>(exitcond_reg_470_pp0_iter1_reg.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_data_out_WREADY.read()));
}

void ov7670_diretto::thread_ap_block_state18_pp0_stage0_iter2() {
    ap_block_state18_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ov7670_diretto::thread_ap_block_state23() {
    ap_block_state23 = (esl_seteq<1,1,1>(ap_const_logic_0, data_out_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op134_writeresp_state23.read()));
}

void ov7670_diretto::thread_ap_condition_pp0_exit_iter0_state16() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_395_p2.read())) {
        ap_condition_pp0_exit_iter0_state16 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state16 = ap_const_logic_0;
    }
}

void ov7670_diretto::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op134_writeresp_state23.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void ov7670_diretto::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void ov7670_diretto::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void ov7670_diretto::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void ov7670_diretto::thread_ap_predicate_op134_writeresp_state23() {
    ap_predicate_op134_writeresp_state23 = ((esl_seteq<1,1,1>(ap_const_lv1_0, first_load_reg_443.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_452.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_reg_459.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_452.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_reg_459.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read())));
}

void ov7670_diretto::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op134_writeresp_state23.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void ov7670_diretto::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void ov7670_diretto::thread_ap_sig_ioackin_data_out_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_AWREADY.read())) {
        ap_sig_ioackin_data_out_AWREADY = data_out_AWREADY.read();
    } else {
        ap_sig_ioackin_data_out_AWREADY = ap_const_logic_1;
    }
}

void ov7670_diretto::thread_ap_sig_ioackin_data_out_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_WREADY.read())) {
        ap_sig_ioackin_data_out_WREADY = data_out_WREADY.read();
    } else {
        ap_sig_ioackin_data_out_WREADY = ap_const_logic_1;
    }
}

void ov7670_diretto::thread_data_out2_sum_cast_fu_368_p1() {
    data_out2_sum_cast_fu_368_p1 = esl_sext<64,33>(data_out2_sum_fu_362_p2.read());
}

void ov7670_diretto::thread_data_out2_sum_fu_362_p2() {
    data_out2_sum_fu_362_p2 = (!tmp_5_cast_fu_254_p1.read().is_01() || !tmp_6_cast_fu_358_p1.read().is_01())? sc_lv<33>(): (sc_bigint<33>(tmp_5_cast_fu_254_p1.read()) + sc_biguint<33>(tmp_6_cast_fu_358_p1.read()));
}

void ov7670_diretto::thread_data_out_AWADDR() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_AWREADY.read()) && 
          esl_seteq<1,1,1>(data_out_BVALID.read(), ap_const_logic_1)))) {
        data_out_AWADDR = data_out_addr_reg_463.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_AWREADY.read()))) {
        data_out_AWADDR = data_out_addr_1_reg_437.read();
    } else {
        data_out_AWADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void ov7670_diretto::thread_data_out_AWLEN() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_AWREADY.read()) && 
         esl_seteq<1,1,1>(data_out_BVALID.read(), ap_const_logic_1))) {
        data_out_AWLEN = ap_const_lv32_500;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_AWREADY.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_AWREADY.read())))) {
        data_out_AWLEN = ap_const_lv32_1;
    } else {
        data_out_AWLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void ov7670_diretto::thread_data_out_AWVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_AWREADY.read()) && 
          esl_seteq<1,1,1>(data_out_BVALID.read(), ap_const_logic_1)))) {
        data_out_AWVALID = ap_const_logic_1;
    } else {
        data_out_AWVALID = ap_const_logic_0;
    }
}

void ov7670_diretto::thread_data_out_BREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_data_out_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_out_BVALID.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(data_out_BVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op134_writeresp_state23.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op134_writeresp_state23.read()))))) {
        data_out_BREADY = ap_const_logic_1;
    } else {
        data_out_BREADY = ap_const_logic_0;
    }
}

void ov7670_diretto::thread_data_out_WDATA() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(exitcond_reg_470_pp0_iter1_reg.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_WREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)))) {
        data_out_WDATA = reg_244.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_WREADY.read()))) {
        data_out_WDATA = ap_const_lv8_0;
    } else {
        data_out_WDATA =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void ov7670_diretto::thread_data_out_WVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(exitcond_reg_470_pp0_iter1_reg.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_data_out_WREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)))) {
        data_out_WVALID = ap_const_logic_1;
    } else {
        data_out_WVALID = ap_const_logic_0;
    }
}

void ov7670_diretto::thread_data_out_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        data_out_blk_n_AW = m_axi_data_out_AWREADY.read();
    } else {
        data_out_blk_n_AW = ap_const_logic_1;
    }
}

void ov7670_diretto::thread_data_out_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, first_load_reg_443.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_452.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_reg_459.read())) || 
           (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_452.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_reg_459.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read())))))) {
        data_out_blk_n_B = m_axi_data_out_BVALID.read();
    } else {
        data_out_blk_n_B = ap_const_logic_1;
    }
}

void ov7670_diretto::thread_data_out_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_reg_470_pp0_iter1_reg.read(), ap_const_lv1_0)))) {
        data_out_blk_n_W = m_axi_data_out_WREADY.read();
    } else {
        data_out_blk_n_W = ap_const_logic_1;
    }
}

void ov7670_diretto::thread_exitcond_fu_395_p2() {
    exitcond_fu_395_p2 = (!indvar_reg_233.read().is_01() || !ap_const_lv11_500.is_01())? sc_lv<1>(): sc_lv<1>(indvar_reg_233.read() == ap_const_lv11_500);
}

void ov7670_diretto::thread_first_load_load_fu_264_p1() {
    first_load_load_fu_264_p1 = first.read();
}

void ov7670_diretto::thread_frame_valid_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read())) || 
          (esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()))))) {
        frame_valid_V = ap_const_lv1_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                 esl_seteq<1,1,1>(data_out_BVALID.read(), ap_const_logic_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                 ((esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_290_p2.read())) || 
                  (esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_290_p2.read())))))) {
        frame_valid_V = ap_const_lv1_0;
    } else {
        frame_valid_V = frame_valid_V_preg.read();
    }
}

void ov7670_diretto::thread_href_V_read_read_fu_134_p2() {
    href_V_read_read_fu_134_p2 = href_V.read();
}

void ov7670_diretto::thread_indvar1_fu_407_p1() {
    indvar1_fu_407_p1 = esl_zext<64,11>(indvar_reg_233.read());
}

void ov7670_diretto::thread_indvar_next_fu_401_p2() {
    indvar_next_fu_401_p2 = (!indvar_reg_233.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(indvar_reg_233.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void ov7670_diretto::thread_line_valid_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, href_V_read_read_fu_134_p2.read())) || 
          (esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, href_V_read_read_fu_134_p2.read()))))) {
        line_valid_V = ap_const_lv1_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                 esl_seteq<1,1,1>(data_out_BVALID.read(), ap_const_logic_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                 ((esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_318_p2.read())) || 
                  (esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_318_p2.read())))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
                 ((esl_seteq<1,1,1>(ap_const_lv1_0, first_load_reg_443.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_452.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_reg_459.read())) || 
                  (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_452.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_reg_459.read()) && 
                   esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()))) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op134_writeresp_state23.read()))))) {
        line_valid_V = ap_const_lv1_0;
    } else {
        line_valid_V = line_valid_V_preg.read();
    }
}

void ov7670_diretto::thread_offset_fu_352_p2() {
    offset_fu_352_p2 = (!p_shl6_cast_fu_348_p1.read().is_01() || !p_shl_cast_fu_336_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(p_shl6_cast_fu_348_p1.read()) + sc_biguint<20>(p_shl_cast_fu_336_p1.read()));
}

void ov7670_diretto::thread_or_cond1_fu_302_p2() {
    or_cond1_fu_302_p2 = (tmp_1_fu_296_p2.read() & p_not_fu_274_p2.read());
}

void ov7670_diretto::thread_or_cond_fu_290_p2() {
    or_cond_fu_290_p2 = (tmp_1_1_fu_284_p2.read() & p_not_fu_274_p2.read());
}

void ov7670_diretto::thread_p_not_fu_274_p2() {
    p_not_fu_274_p2 = (vsync_V.read() ^ ap_const_lv1_1);
}

void ov7670_diretto::thread_p_shl6_cast_fu_348_p1() {
    p_shl6_cast_fu_348_p1 = esl_zext<20,17>(p_shl6_fu_340_p3.read());
}

void ov7670_diretto::thread_p_shl6_fu_340_p3() {
    p_shl6_fu_340_p3 = esl_concat<9,8>(tmp_1_2_fu_324_p1.read(), ap_const_lv8_0);
}

void ov7670_diretto::thread_p_shl_cast_fu_336_p1() {
    p_shl_cast_fu_336_p1 = esl_zext<20,19>(p_shl_fu_328_p3.read());
}

void ov7670_diretto::thread_p_shl_fu_328_p3() {
    p_shl_fu_328_p3 = esl_concat<9,10>(tmp_1_2_fu_324_p1.read(), ap_const_lv10_0);
}

void ov7670_diretto::thread_tmp_1_1_fu_284_p2() {
    tmp_1_1_fu_284_p2 = (!count_lines.read().is_01() || !ap_const_lv32_1E0.is_01())? sc_lv<1>(): (sc_biguint<32>(count_lines.read()) < sc_biguint<32>(ap_const_lv32_1E0));
}

void ov7670_diretto::thread_tmp_1_2_fu_324_p1() {
    tmp_1_2_fu_324_p1 = count_lines.read().range(9-1, 0);
}

void ov7670_diretto::thread_tmp_1_fu_296_p2() {
    tmp_1_fu_296_p2 = (!count_lines.read().is_01() || !ap_const_lv32_1E0.is_01())? sc_lv<1>(): sc_lv<1>(count_lines.read() == ap_const_lv32_1E0);
}

void ov7670_diretto::thread_tmp_2_fu_378_p1() {
    tmp_2_fu_378_p1 = esl_zext<64,32>(count_readings.read());
}

void ov7670_diretto::thread_tmp_3_fu_383_p2() {
    tmp_3_fu_383_p2 = (!count_readings.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(count_readings.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ov7670_diretto::thread_tmp_4_fu_318_p2() {
    tmp_4_fu_318_p2 = (!count_readings.read().is_01() || !ap_const_lv32_500.is_01())? sc_lv<1>(): sc_lv<1>(count_readings.read() == ap_const_lv32_500);
}

void ov7670_diretto::thread_tmp_5_cast_fu_254_p0() {
    tmp_5_cast_fu_254_p0 = data_out_offset.read();
}

void ov7670_diretto::thread_tmp_5_cast_fu_254_p1() {
    tmp_5_cast_fu_254_p1 = esl_sext<33,32>(tmp_5_cast_fu_254_p0.read());
}

void ov7670_diretto::thread_tmp_5_fu_250_p0() {
    tmp_5_fu_250_p0 = data_out_offset.read();
}

void ov7670_diretto::thread_tmp_5_fu_250_p1() {
    tmp_5_fu_250_p1 = esl_sext<64,32>(tmp_5_fu_250_p0.read());
}

void ov7670_diretto::thread_tmp_6_cast_fu_358_p1() {
    tmp_6_cast_fu_358_p1 = esl_zext<33,20>(offset_fu_352_p2.read());
}

void ov7670_diretto::thread_tmp_8_fu_418_p2() {
    tmp_8_fu_418_p2 = (!count_lines_load_reg_447.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(count_lines_load_reg_447.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ov7670_diretto::thread_tmp_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        tmp_address0 =  (sc_lv<11>) (indvar1_fu_407_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        tmp_address0 = ap_const_lv11_0;
    } else {
        tmp_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void ov7670_diretto::thread_tmp_address1() {
    tmp_address1 =  (sc_lv<11>) (tmp_2_fu_378_p1.read());
}

void ov7670_diretto::thread_tmp_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        tmp_ce0 = ap_const_logic_1;
    } else {
        tmp_ce0 = ap_const_logic_0;
    }
}

void ov7670_diretto::thread_tmp_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_ce1 = ap_const_logic_1;
    } else {
        tmp_ce1 = ap_const_logic_0;
    }
}

void ov7670_diretto::thread_tmp_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, href_V_read_read_fu_134_p2.read())) || 
          (esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, href_V_read_read_fu_134_p2.read()))))) {
        tmp_we1 = ap_const_logic_1;
    } else {
        tmp_we1 = ap_const_logic_0;
    }
}

void ov7670_diretto::thread_vsync_V_read_read_fu_128_p2() {
    vsync_V_read_read_fu_128_p2 = vsync_V.read();
}

void ov7670_diretto::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && ((esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_318_p2.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, href_V.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_290_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_318_p2.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && ((((((esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
       esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_318_p2.read())) || 
      (esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
       esl_seteq<1,1,1>(ap_const_lv1_1, href_V_read_read_fu_134_p2.read()))) || 
     (esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_264_p1.read()) && 
      esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_290_p2.read()))) || 
    (esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
     esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_318_p2.read()))) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
    esl_seteq<1,1,1>(ap_const_lv1_1, href_V_read_read_fu_134_p2.read()))) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, vsync_V.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_290_p2.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, vsync_V_read_read_fu_128_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, first_load_load_fu_264_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_data_out_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_data_out_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(data_out_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_data_out_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_data_out_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_data_out_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, data_out_BVALID.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_395_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_395_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, data_out_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op134_writeresp_state23.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<21>) ("XXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void ov7670_diretto::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_data_out_AWVALID\" :  \"" << m_axi_data_out_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_data_out_AWREADY\" :  \"" << m_axi_data_out_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_AWADDR\" :  \"" << m_axi_data_out_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_AWID\" :  \"" << m_axi_data_out_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_AWLEN\" :  \"" << m_axi_data_out_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_AWSIZE\" :  \"" << m_axi_data_out_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_AWBURST\" :  \"" << m_axi_data_out_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_AWLOCK\" :  \"" << m_axi_data_out_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_AWCACHE\" :  \"" << m_axi_data_out_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_AWPROT\" :  \"" << m_axi_data_out_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_AWQOS\" :  \"" << m_axi_data_out_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_AWREGION\" :  \"" << m_axi_data_out_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_AWUSER\" :  \"" << m_axi_data_out_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_WVALID\" :  \"" << m_axi_data_out_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_data_out_WREADY\" :  \"" << m_axi_data_out_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_WDATA\" :  \"" << m_axi_data_out_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_WSTRB\" :  \"" << m_axi_data_out_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_WLAST\" :  \"" << m_axi_data_out_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_WID\" :  \"" << m_axi_data_out_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_WUSER\" :  \"" << m_axi_data_out_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_ARVALID\" :  \"" << m_axi_data_out_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_data_out_ARREADY\" :  \"" << m_axi_data_out_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_ARADDR\" :  \"" << m_axi_data_out_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_ARID\" :  \"" << m_axi_data_out_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_ARLEN\" :  \"" << m_axi_data_out_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_ARSIZE\" :  \"" << m_axi_data_out_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_ARBURST\" :  \"" << m_axi_data_out_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_ARLOCK\" :  \"" << m_axi_data_out_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_ARCACHE\" :  \"" << m_axi_data_out_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_ARPROT\" :  \"" << m_axi_data_out_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_ARQOS\" :  \"" << m_axi_data_out_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_ARREGION\" :  \"" << m_axi_data_out_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_ARUSER\" :  \"" << m_axi_data_out_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_data_out_RVALID\" :  \"" << m_axi_data_out_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_RREADY\" :  \"" << m_axi_data_out_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_data_out_RDATA\" :  \"" << m_axi_data_out_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_data_out_RLAST\" :  \"" << m_axi_data_out_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_data_out_RID\" :  \"" << m_axi_data_out_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_data_out_RUSER\" :  \"" << m_axi_data_out_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_data_out_RRESP\" :  \"" << m_axi_data_out_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_data_out_BVALID\" :  \"" << m_axi_data_out_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_data_out_BREADY\" :  \"" << m_axi_data_out_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_data_out_BRESP\" :  \"" << m_axi_data_out_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_data_out_BID\" :  \"" << m_axi_data_out_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_data_out_BUSER\" :  \"" << m_axi_data_out_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_in_V\" :  \"" << data_in_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"href_V\" :  \"" << href_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vsync_V\" :  \"" << vsync_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"line_valid_V\" :  \"" << line_valid_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"frame_valid_V\" :  \"" << frame_valid_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

